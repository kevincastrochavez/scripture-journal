@page "{searchString?}"
@model ScriptureJournal.Pages.Scriptures.IndexModel

@{
    ViewData["Title"] = "Index";
}
<div class="create-container">
    <h1>Index</h1>

    <p>
        <a class='create-btn' asp-page="Create">Create New</a>
    </p>
</div>
<form>
    <p>
        Book or Notes keyword: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" id='searchInput' />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Scripture[0].Book)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Scripture[0].Chapter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Scripture[0].Verse)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Scripture[0].EntryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Scripture[0].Notes)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Scripture) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Book)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Chapter)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Verse)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Notes)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ID"><i class="fa-solid fa-pen"></i></a> |
                <a asp-page="./Details" asp-route-id="@item.ID"><i class="fa-solid fa-info"></i></a> |
                <a asp-page="./Delete" asp-route-id="@item.ID"><i class="fa-solid fa-trash"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>
